spring.main.allow-bean-definition-overriding=true
server.port=8080
spring.application.name=auth-system

# Fixed MySQL Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/auth_system?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=

# If the above doesn't work, try this:
# spring.datasource.url=jdbc:mysql://localhost:3306/auth_system?allowPublicKeyRetrieval=true&useSSL=false

# JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Email Configuration (Update with real credentials)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username@gmail.com
spring.mail.password=

spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# Session
server.servlet.session.timeout=1800
spring.session.store-type=none

# Thymeleaf
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.servlet.content-type=text/html
spring.thymeleaf.cache=false

# Security
spring.security.filter.order=10

# Google OAuth 2.0 Configuration
spring.security.oauth2.client.registration.google.client-id=
spring.security.oauth2.client.registration.google.client-secret=
spring.security.oauth2.client.registration.google.scope=profile,email